#include <MeAuriga.h>
#include <Pixy2.h>

//-------------------motores-------------------------------
MeEncoderOnBoard Encoder_1 (SLOT1); //motor de movimiento
Servo servo_6_1; //motor de dirección - centro = 95
MePort port_6(6);

//-------------------sensores------------------------------
MeUltrasonicSensor ultrasonic_7(7); // izquierda
MeUltrasonicSensor ultrasonic_8(8); // derecha
MeUltrasonicSensor ultrasonic_9(9); // adelante
Pixy2 pixy; //cámara

//----------------------led--------------------------------
MeRGBLed rgbled_0(0, 12);

int carril = 0; //variable que define el carril
int direccion = 0; //variable que define la dirección
//porcentaje motor: x*100/255=%
int velocidadA = -190; //definir velocidad de manejo (75%)
int velocidad = -175; //definir velocidad de manejo  (68%)
int velocidadF = -30; //definir velocidad de manejo  (12%)
int count = 0;
unsigned long previousMillis = 0;
const unsigned long interval = 1000; 

void setup() {
  Serial.begin(9600);
  pixy.init();
}

void loop() {
  rgbled_0.setpin(44);
  rgbled_0.fillPixelsBak(0, 2, 1);
  servo_6_1.attach(port_6.pin1());
  pixy.ccc.getBlocks();
  unsigned long currentMillis = millis();

  int giro_01, giro_02, giro_03;
  int izq_01, izq_02, izq_03;
  int centro;
  int der_01, der_02, der_03;

//------------------------------en cuál carril está------------------------------------
  if (carril == 0) {

    int distance = ultrasonic_8.distanceCm(); //distancia a la derecha

    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");

    if (distance > 0 && distance <= 40)       { carril = 1; }
    else if (distance > 40 && distance <= 60) { carril = 2; }      
    else if (distance > 60)                   { carril = 3; }

  }

//----------------------hacia qué dirección va--------------------
  if (direccion == 0) {
    servo_6_1.write(95);
    Encoder_1.setTarPWM(velocidad);
    Encoder_1.loop();

    int dd = ultrasonic_8.distanceCm(); //distancia a la derecha
    int di = ultrasonic_7.distanceCm(); //distancia a la izquierda

    if (dd >= 95 ) { direccion = 1; } //sentido horario
    else if (di >= 95) { direccion = 2; } //sentido antihorario
    
    // Cantidad de Giro
    giro_01 = 10;
    giro_02 = 15;
    giro_03 = 27;

    // Posicion de Centro
    centro = 95;

    // Cantidad de Giro a la Izquierda
    izq_01 = centro - giro_01;
    izq_02 = izq_01 - giro_02;
    izq_03 = izq_02 - giro_03;

    // Cantidad de Giro a la Derecha
    der_01 = centro + giro_01;
    der_02 = der_01 + giro_02;
    der_03 = der_02 + giro_03;
  }

//-------------------va en sentido horario------------
  if (direccion == 1) {

    if      (count == 1) {
      rgbled_0.setColor(1,  0,255,0); 
      } else if (count == 2) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      } else if (count == 3) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0); 
      } else if (count == 4) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      } else if (count == 5) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      } else if (count == 6) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0); 
      } else if (count == 7) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      } else if (count == 8) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      } else if (count == 9) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      } else if (count == 10) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      } else if (count == 11) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      rgbled_0.setColor(11,  0,0,255);
      } else if (count == 12) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      rgbled_0.setColor(11,  0,0,255);
      rgbled_0.setColor(12,  0,0,255);
      } else if (count == 13) {
      rgbled_0.setColor(0,  0,0,0);
      rgbled_0.setColor(0,  100,200,240);
      }
      rgbled_0.show();

    if (carril == 1){
      
      if (count >= 13) {
        Encoder_1.setTarPWM(0);
        Encoder_1.loop();
      } else {

          int dist = ultrasonic_8.distanceCm();
          // Carril 1: -----------------------------------
          if      (dist <= 10) { servo_6_1.write(izq_03); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); }
          else if (dist <= 20) { servo_6_1.write(izq_02); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); } 
          else if (dist <= 25) { servo_6_1.write(izq_01); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop(); }
          // Carril 2: -----------------------------------
          else if (dist <= 28) { servo_6_1.write(centro); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop(); }
          // Carril 3: -----------------------------------
          else if (dist <= 33) { servo_6_1.write(der_01); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop(); }
          else if (dist <= 36) { servo_6_1.write(der_02); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); }
          // ---------------------------------------------
          else { 
            servo_6_1.write(der_03);
            Encoder_1.setTarPWM(velocidad);
            Encoder_1.loop();
            // ---------------------------------------------
            if (dist > 100) {
              if (currentMillis - previousMillis >= interval) {
                // Save the last time the action was performed
                previousMillis = currentMillis;
                count++;
              }
            }
          }
          rgbled_0.show();
          
          if (count == 12) {
            if (currentMillis - previousMillis >= interval) {
                // Save the last time the action was performed
                previousMillis = currentMillis;
                count++;
              }
          }        
      }

    }

    if (carril == 2) {
      Encoder_1.setTarPWM(velocidad);
      Encoder_1.loop();

      servo_6_1.write(der_03);
      delay(750);
      servo_6_1.write(centro);
      delay(1000);
      count++;
      carril = 1;
    }

    if (carril == 3) {
      Encoder_1.setTarPWM(velocidad);
      Encoder_1.loop();

      servo_6_1.write(der_03);
      delay(750);
      servo_6_1.write(centro);
      delay(1000);
      count++;
      carril = 1;
    }

  }

//---------------va en sentido antihorario------------
  if (direccion == 2) {

    if      (count == 1) {
      rgbled_0.setColor(1,  0,255,0); 
      } else if (count == 2) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      } else if (count == 3) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0); 
      } else if (count == 4) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      } else if (count == 5) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      } else if (count == 6) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0); 
      } else if (count == 7) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      } else if (count == 8) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      } else if (count == 9) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      } else if (count == 10) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      } else if (count == 11) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      rgbled_0.setColor(11,  0,0,255);
      } else if (count == 12) {
      rgbled_0.setColor(1,  0,255,0); 
      rgbled_0.setColor(2,  0,255,0); 
      rgbled_0.setColor(3,  0,255,0);
      rgbled_0.setColor(4,  0,255,0); 
      rgbled_0.setColor(5,  255,0,0); 
      rgbled_0.setColor(6,  255,0,0);
      rgbled_0.setColor(7,  255,0,0); 
      rgbled_0.setColor(8,  255,0,0); 
      rgbled_0.setColor(9,  0,0,255); 
      rgbled_0.setColor(10,  0,0,255);
      rgbled_0.setColor(11,  0,0,255);
      rgbled_0.setColor(12,  0,0,255);
      } else if (count == 13) {
      rgbled_0.setColor(0,  0,0,0);
      rgbled_0.setColor(0,  100,200,240);
      }
      rgbled_0.show();

    if (carril == 1) {
      Encoder_1.setTarPWM(velocidad);
      Encoder_1.loop();

      servo_6_1.write(izq_03-3);
      delay(1020);
      servo_6_1.write(centro);
      delay(1000);
      count++;
      carril = 3;
    }

    if (carril == 3) {

      if (count >= 13) {
        Encoder_1.setTarPWM(0);
        Encoder_1.loop();
      } else {

          int dist = ultrasonic_7.distanceCm();
          // Carril 1: -----------------------------------
          if      (dist <= 10)  { servo_6_1.write(der_03); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); }
          else if (dist <= 20) { servo_6_1.write(der_02); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); } 
          else if (dist <= 25) { servo_6_1.write(der_01); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop();}
          // Carril 2: -----------------------------------
          else if (dist <= 28) { servo_6_1.write(centro); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop();}
          // Carril 3: -----------------------------------
          else if (dist <= 33) { servo_6_1.write(izq_01); Encoder_1.setTarPWM(velocidadA); Encoder_1.loop();}
          else if (dist <= 36) { servo_6_1.write(izq_02); Encoder_1.setTarPWM(velocidad); Encoder_1.loop(); }
          // ---------------------------------------------
          else { 
            servo_6_1.write(izq_03-3);
            Encoder_1.setTarPWM(velocidad);
            Encoder_1.loop();
            // ---------------------------------------------
            if (dist > 100 && dist < 400) {
              if (currentMillis - previousMillis >= interval) {
              // Save the last time the action was performed
              previousMillis = currentMillis;
              count++;
              }
            }
          }
      }
      if (count == 12) {
            if (currentMillis - previousMillis >= interval) {
                // Save the last time the action was performed
                previousMillis = currentMillis;
                count++;
              }
          }     
    }

    if (carril == 2) {
      Encoder_1.setTarPWM(velocidad);
      Encoder_1.loop();

      servo_6_1.write(izq_03-3);
      delay(1050);
      servo_6_1.write(centro);
      delay(1000);
      count++;
      carril = 3;
    }

  }
}
